{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyPress","event","setState","currentValue","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"2NAMaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,EAaEC,eAAiB,SAACC,GAChB,EAAKC,UAAS,SAAAC,GACZ,OAAO,2BACFA,GADL,IAEEJ,WAAYE,EAAMG,UAjB1B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKP,kBAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,kBAV/C,oBAsBE,WACE,IAAQD,EAAeQ,KAAKT,MAApBC,WAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGV,EAAU,mCACmBA,EADnB,KAGT,kCA/BZ,GAAyBW,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.9f8f8df1.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component {\n  state: State = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState(currentValue => {\n      return {\n        ...currentValue,\n        pressedKey: event.key,\n      };\n    });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey ? (\n            `The last pressed key is [${pressedKey}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}